<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.node.mapper.MessageMapper">
    <resultMap id="BaseResultMap" type="com.node.domain.Message">
        <!--@mbg.generated-->
        <!--@Table message-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="sender_id" jdbcType="INTEGER" property="senderId"/>
        <result column="recipient_id" jdbcType="INTEGER" property="recipientId"/>
        <result column="read_status" jdbcType="INTEGER" property="readStatus"/>
        <result column="delete_status" jdbcType="INTEGER" property="deleteStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="read_time" jdbcType="TIMESTAMP" property="readTime"/>
        <result column="isSystem" jdbcType="INTEGER" property="issystem"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, title, content, sender_id, recipient_id, read_status, delete_status, create_time,
        read_time, isSystem
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from message
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.node.domain.Message" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into message (title, content, sender_id,
                             recipient_id, read_status, delete_status,
                             create_time, read_time, isSystem)
        values (#{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{senderId,jdbcType=INTEGER},
                #{recipientId,jdbcType=INTEGER}, #{readStatus,jdbcType=INTEGER}, #{deleteStatus,jdbcType=INTEGER},
                #{createTime,jdbcType=TIMESTAMP}, #{readTime,jdbcType=TIMESTAMP}, #{issystem,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.node.domain.Message"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="senderId != null">
                sender_id,
            </if>
            <if test="recipientId != null">
                recipient_id,
            </if>
            <if test="readStatus != null">
                read_status,
            </if>
            <if test="deleteStatus != null">
                delete_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="readTime != null">
                read_time,
            </if>
            <if test="issystem != null">
                isSystem,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="senderId != null">
                #{senderId,jdbcType=INTEGER},
            </if>
            <if test="recipientId != null">
                #{recipientId,jdbcType=INTEGER},
            </if>
            <if test="readStatus != null">
                #{readStatus,jdbcType=INTEGER},
            </if>
            <if test="deleteStatus != null">
                #{deleteStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readTime != null">
                #{readTime,jdbcType=TIMESTAMP},
            </if>
            <if test="issystem != null">
                #{issystem,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.node.domain.Message">
        <!--@mbg.generated-->
        update message
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="senderId != null">
                sender_id = #{senderId,jdbcType=INTEGER},
            </if>
            <if test="recipientId != null">
                recipient_id = #{recipientId,jdbcType=INTEGER},
            </if>
            <if test="readStatus != null">
                read_status = #{readStatus,jdbcType=INTEGER},
            </if>
            <if test="deleteStatus != null">
                delete_status = #{deleteStatus,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="readTime != null">
                read_time = #{readTime,jdbcType=TIMESTAMP},
            </if>
            <if test="issystem != null">
                isSystem = #{issystem,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.node.domain.Message">
        <!--@mbg.generated-->
        update message
        set title         = #{title,jdbcType=VARCHAR},
            content       = #{content,jdbcType=VARCHAR},
            sender_id     = #{senderId,jdbcType=INTEGER},
            recipient_id  = #{recipientId,jdbcType=INTEGER},
            read_status   = #{readStatus,jdbcType=INTEGER},
            delete_status = #{deleteStatus,jdbcType=INTEGER},
            create_time   = #{createTime,jdbcType=TIMESTAMP},
            read_time     = #{readTime,jdbcType=TIMESTAMP},
            isSystem      = #{issystem,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <resultMap id="map" type="com.node.domain.Message">
        <result column="title" property="title"/>
        <result column="sender_id" property="senderId"/>
        <result column="read_status" property="readStatus"/>
        <result column="create_time" property="createTime"/>
        <result column="id" property="id"/>
        <result column="content" property="content"/>
        <result column="isSystem" property="issystem"/>
        <result column="user_id" property="recipientId"/>

     </resultMap>

    <!--查询 发送消息为管理员且没有指定接收人 接收消息为自己-->
    <!--查询 系统消息 以及私信-->
    <select id="getByPage" resultMap="map">
        select title,
               sender_id,
               create_time,
               um.read_status,
               message.id,
               content,
               isSystem,
               um.user_id
        from message
                     join user_message um on message.id = um.message_id
        where <!--(um.user_id = #{userId} or message.isSystem = 1)-->
        um.user_id = #{userId}
          and um.delete_status = 0
        order by create_time desc
    </select>
    <!--根据id查询-->
    <resultMap id="map1" type="com.node.domain.Message">
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="sender_id" property="senderId"/>
        <result column="read_status" property="readStatus"/>
        <result column="create_time" property="createTime"/>
        <result column="isSystem" property="issystem"/>
        <result column="id" property="id"/>
    </resultMap>
    <!--查询所有-->
    <select id="selectAll" resultMap="map1">
        select title,
               sender_id,
               create_time,
               um.read_status,
               isSystem,
               content,
               message.id
        from message
                     join user_message um on message.id = um.message_id and um.delete_status = 0
                     and um.user_id=1
    </select>


    <select id="selectById" resultMap="map">
        select title,
               sender_id,
               create_time,
               um.read_status,
               isSystem
        from message
                     join user_message um on message.id = um.message_id
        where message.id = #{id}
          and um.user_id = #{userId}
    </select>
    <select id="selectNew" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from message order by id desc limit 1
    </select>
</mapper>