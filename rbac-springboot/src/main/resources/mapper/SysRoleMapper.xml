<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.node.mapper.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.node.domain.SysRole">
        <!--@mbg.generated-->
        <!--@Table sys_role-->
        <id column="role_id" jdbcType="BIGINT" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="role_sort" jdbcType="INTEGER" property="roleSort"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="del_flag" jdbcType="INTEGER" property="delFlag"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        role_id, role_name, role_sort, remark, `status`, del_flag, create_by, create_time,
        update_by, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where role_id = #{roleId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete
        from sys_role
        where role_id = #{roleId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.node.domain.SysRole"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_role (role_name, role_sort, remark,
                              `status`, del_flag, create_by,
                              create_time, update_by, update_time)
        values (#{roleName,jdbcType=VARCHAR}, #{roleSort,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
                #{status,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.node.domain.SysRole"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleSort != null">
                role_sort,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.node.domain.SysRole">
        <!--@mbg.generated-->
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleSort != null">
                role_sort = #{roleSort,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.node.domain.SysRole">
        <!--@mbg.generated-->
        update sys_role
        set role_name   = #{roleName,jdbcType=VARCHAR},
            role_sort   = #{roleSort,jdbcType=INTEGER},
            remark      = #{remark,jdbcType=VARCHAR},
            `status`    = #{status,jdbcType=INTEGER},
            del_flag    = #{delFlag,jdbcType=INTEGER},
            create_by   = #{createBy,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_by   = #{updateBy,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        where role_id = #{roleId,jdbcType=BIGINT}
    </update>

    <select id="selectAllRole" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
        </include>
        from sys_role
        <where>
            <if test="params.roleName != null and params.roleName != ''">
                role_name like concat('%', #{params.roleName}, '%')
            </if>
            <if test="params.status != null">
                and status = #{params.status}
            </if>
            and del_flag = 0
        </where>
    </select>
    <update id="delete">
        <!--将状态改为删除状态-->
        update sys_role
        set del_flag=1
        where role_id = #{roleId}
    </update>

    <select id="getCurrentRoleHasMenuIdsByRoleId" resultType="java.lang.Long">
        <!--根据角色的id查询对应的菜单id 且不查一二级菜单的id-->
        select sm.menu_id
        from sys_role_menu rm
                     join sys_menu sm on rm.menu_id = sm.menu_id
        where rm.role_id = #{roleId}
          and sm.status = 0 and sm.menu_id > 10000
    </select>

    <select id="getAllRoles" resultMap="BaseResultMap">
    <!--查询所有的角色-->
    select <include refid="Base_Column_List"></include> from sys_role where status=0
    </select>


</mapper>